syntax = "proto3";

package rbac;

option go_package = "./proto/rbacRole";

service RbacRole {
	rpc RoleGet(RoleGetRequest) returns (RoleGetResponse) {}
	rpc RoleAdd(RoleAddRequest) returns (RoleAddResponse) {}
	rpc RoleEdit(RoleEditRequest) returns (RoleEditResponse) {}
	rpc RoleDelete(RoleDeleteRequest) returns (RoleDeleteResponse) {}
	rpc RoleAuth(RoleAuthRequest) returns (RoleAuthResponse) {}
	rpc RoleDoAuth(RoleDoAuthRequest) returns (RoleDoAuthResponse) {}
}
message RoleModel{
	int64 id=1;
	string title=2;
	string description=3;
	int64 status=4;
	int64 addTime =5;
}
message AccessModel{
	int64 id=1;
	string moduleName =2;
	string actionName=3;
	int64 type=4;
	string url=5;
	int64 moduleId=6;
	int64 sort =7;
	string description=8;
	int64 status=9;
	int64 addTime=10;
	bool checked=11;
	repeated AccessModel accessItem=12;
}

message RoleGetRequest{
	int64 id =1;
}
message RoleGetResponse{
	repeated RoleModel roleList=1;
}

message RoleAddRequest{
	string title=1;
	string description=2;
	int64 status=3;
	int64 addTime =4;
}

message RoleAddResponse{	
	bool success=1;
	string message=2;
}

message RoleEditRequest{
	int64 id=1;
	string title=2;
	string description=3;
	int64 status=4;
	int64 addTime =5;
}

message RoleEditResponse{	
	bool success=1;
	string message=2;
}

message RoleDeleteRequest{
	int64 id=1;	
}

message RoleDeleteResponse{	
	bool success=1;
	string message=2;
}


//角色授权
message RoleAuthRequest{
	int64 roleId=1;
}
message RoleAuthResponse{
	repeated AccessModel accessList=1;
}
message RoleDoAuthRequest{
	int64 roleId=1;
	repeated string accessIds=2;
}
message RoleDoAuthResponse{
	bool success=1;
	string message=2;
}